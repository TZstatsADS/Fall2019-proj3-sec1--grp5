getwd()
sys.getenv()
Sys.getenv()
Sys.getenv('PATH')
install.packages('dplyr')
install.packages('xts')
?install.packages
.libPaths()
file.path('~')
?filepath
?file.path
.libPaths()
Sys.getenv('R_ENVIRON')
Sys.getenv('R_E')
Sys.getenv('R_HOME')
Sys.getenv('R_ENVIRON_USER')
?Sys.getenv
Sys.getenv()
?.libPaths
.libPaths
.libPaths()
?Sys.getenv
.libPaths()
.libPaths()
?.libPaths()
.Library
.Library.site
.libPaths()
Sys.getenv()
Sys.getenv()
.libPaths()
.libPaths()
Sys.getenv()
.libPaths()
.libPaths()
Sys.getenv()
.libPaths()
getwd()
Sys.getenv()
.libPaths()
.libPaths(.libPaths()[2])
.libPaths()
.libPaths()
.libPaths()
.libPaths()
.libPaths()
.libPaths()
.libPaths()
.libPaths()
.libPaths()
.libPaths()
.libPaths()
.libPaths()
install.packages('dplyr')
R.home()
install.packages('dplyr')
install.packages('xts')
library(tidytext)
library(tidyverse)
install.packages('tidytext')
library(tidyverse)
install.packages('tidytext')
library(tidyverse)
library(tidytext)
install.packages('tidyverse')
install.packages('plotly')
library(DT)
install.packages('DT')
install.packages('tm')
install.packages('data.table')
install.packages('scales')
install.packages('wordcloud2')
install.packages('gridExtra')
install.packages('ngram')
install.packages('shiny')
unlink('Columbia/STAT5243 Applied Data Science/fall2019-proj1--wwyws0000/doc/Text_Processing_cache', recursive = TRUE)
install.packages(c("caret", "R.matlab"))
library(EBImage)
source("https://bioconductor.org/biocLite.R")
https://bioconductor.org/install
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
install.packages('digest')
install.packages("digest")
install.packages("digest")
install.packages("digest")
install.packages('digest')
BiocManager::install()
BiocManager::install()
library(EBImage)
biocLite("EBImage")
library(BiocManager)
BiocManager::available()
BiocManager::install('EBIMage')
BiocManager::install('EBImage')
if(!require("EBImage")){
source("https://bioconductor.org/biocLite.R")
biocLite("EBImage")
}
if(!require("R.matlab")){
install.packages("R.matlab")
}
if(!require("readxl")){
install.packages("readxl")
}
if(!require("dplyr")){
install.packages("dplyr")
}
if(!require("readxl")){
install.packages("readxl")
}
if(!require("ggplot2")){
install.packages("ggplot2")
}
if(!require("caret")){
install.packages("caret")
}
library(R.matlab)
library(readxl)
library(dplyr)
library(EBImage)
library(ggplot2)
library(caret)
train_dir <- "../data/train_set/" # This will be modified for different data sets.
train_image_dir <- paste(train_dir, "images/", sep="")
train_pt_dir <- paste(train_dir,  "points/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
set.seed(0)
setwd("C:/Users/wwyws/OneDrive/Documents/Columbia/STAT5243 Applied Data Science/Fall2019-proj3-sec1--grp5/doc")
# here replace it with your own path or manually set it in RStudio to where this rmd file is located.
# use relative path for reproducibility
train_dir <- "../data/train_set/" # This will be modified for different data sets.
train_image_dir <- paste(train_dir, "images/", sep="")
train_pt_dir <- paste(train_dir,  "points/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
run.cv=TRUE # run cross-validation on the training set
K <- 5  # number of CV folds
run.feature.train=TRUE # process features for training set
run.test=TRUE # run evaluation on an independent test set
run.feature.test=TRUE # process features for test set
k = c(5,11,21,31,41,51)
model_labels = paste("KNN with K =", k)
#train-test split
info <- read.csv(train_label_path)
train_label_path
getwd()
set.seed(0)
setwd("C:/Users/wwyws/OneDrive/Documents/Columbia/STAT5243 Applied Data Science/Fall2019-proj3-sec1--grp5/doc")
# here replace it with your own path or manually set it in RStudio to where this rmd file is located.
# use relative path for reproducibility
getwd()
library(R.matlab)
library(readxl)
library(dplyr)
library(EBImage)
library(ggplot2)
library(caret)
set.seed(0)
setwd("C:/Users/wwyws/OneDrive/Documents/Columbia/STAT5243 Applied Data Science/Fall2019-proj3-sec1--grp5/doc")
train_dir <- "../data/train_set/" # This will be modified for different data sets.
train_image_dir <- paste(train_dir, "images/", sep="")
train_pt_dir <- paste(train_dir,  "points/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
train_dir
run.cv=TRUE # run cross-validation on the training set
K <- 5  # number of CV folds
run.feature.train=TRUE # process features for training set
run.test=TRUE # run evaluation on an independent test set
run.feature.test=TRUE # process features for test set
k = c(5,11,21,31,41,51)
model_labels = paste("KNN with K =", k)
info <- read.csv(train_label_path)
train_label_path
getwd()
train_label_path
